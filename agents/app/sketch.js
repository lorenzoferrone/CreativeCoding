// Generated by CoffeeScript 1.10.0
var Agent, Environment, Food, agents, draw, environment, food, foodRate, maxDistance, mouseClicked, poisonousFoodRate, ref, setup, slow;

ref = require('./app/agent.js'), Agent = ref.Agent, Food = ref.Food;

Environment = require('./app/environment.js');

environment = new Environment();

agents = [];

food = [];

maxDistance = 200;

foodRate = 0.1;

poisonousFoodRate = 0.1;

slow = 0;

setup = function() {
  var agent, f, i, j, k;
  createCanvas(windowWidth, windowHeight);
  for (i = j = 0; j < 5; i = ++j) {
    agent = new Agent(random(width), random(height));
    agents.push(agent);
  }
  for (i = k = 0; k < 10; i = ++k) {
    f = new Food(random(width), random(height));
    food.push(f);
  }
  environment.add(agents);
  return environment.add(food);
};

mouseClicked = function() {
  if (slow === 0) {
    frameRate(1);
    return slow = 1;
  } else {
    frameRate(60);
    return slow = 0;
  }
};

draw = function() {
  var a, agent, distance, f, j, k, len, n, p, r, results;
  background(51);
  agents = environment.filter((function(_this) {
    return function(element) {
      return element instanceof Agent;
    };
  })(this));
  food = environment.filter((function(_this) {
    return function(element) {
      return element instanceof Food;
    };
  })(this));
  text("population: " + agents.length, width - 100, 10, 100, 100);
  text("time: " + ((millis() / 1000).toFixed(1)), width - 100, 30, 100, 100);
  if (agents.length === 0) {
    textSize(32);
    textAlign(CENTER);
    text('all dead', width / 2 - 250, height / 2, 500, 500);
    noLoop();
  }
  r = random();
  p = random();
  if (r < foodRate) {
    f = new Food(random(100, width - 100), random(100, height - 100));
    f.poisonous = p < poisonousFoodRate;
    food.push(f);
    environment.push(f);
  }
  for (j = 0, len = food.length; j < len; j++) {
    f = food[j];
    f.draw();
  }
  results = [];
  for (k = agents.length - 1; k >= 0; k += -1) {
    agent = agents[k];
    agent.health = agent.health - 0.5;
    agent.age = agent.age - 0.1;
    if ((agent.health <= 0) || (agent.age <= 0)) {
      environment.remove(agent);
    }
    a = agent.reproduce();
    if (a !== void 0) {
      environment.push(a);
    }
    agent.separate(agents);
    agent.move(environment);
    agent.draw();
    results.push((function() {
      var l, len1, results1;
      results1 = [];
      for (l = 0, len1 = food.length; l < len1; l++) {
        n = food[l];
        distance = dist(agent.location.x, agent.location.y, n.location.x, n.location.y);
        if (distance < agent.r / 2) {
          if (n.poisonous) {
            agent.health = agent.health - 100;
          } else {
            agent.health = agent.health + 100;
          }
          results1.push(environment.remove(n));
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    })());
  }
  return results;
};
