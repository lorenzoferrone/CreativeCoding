// Generated by CoffeeScript 1.10.0
this.Dot = (function() {
  function Dot(x1, y1) {
    this.x = x1;
    this.y = y1;
    this.selected = false;
  }

  Dot.prototype.draw = function(r, g, b) {
    if (this.selected) {
      this.select(r, g, b);
    } else {
      stroke(r, g, b, 10);
      fill(r, g, b, 10);
      return ellipse(this.x, this.y, 10, 10);
    }
  };

  Dot.prototype.highlight = function(r, g, b) {
    stroke(r, g, b, 100);
    fill(r, g, b, 50);
    return ellipse(this.x, this.y, 10, 10);
  };

  Dot.prototype.select = function(r, g, b) {
    stroke(r, g, b, 10);
    fill(r, g, b, 10);
    return ellipse(this.x, this.y, 10, 10);
  };

  return Dot;

})();

this.Grid = (function() {
  function Grid() {
    var i, j, k, m, ref, ref1;
    this.dots = {};
    for (i = k = 0, ref = width; k < ref; i = k += 20) {
      for (j = m = 0, ref1 = height; m < ref1; j = m += 20) {
        this.dots[[i, j]] = new Dot(i + 10, j + 10);
      }
    }
  }

  Grid.prototype.near = function(x, y) {
    var i, j;
    i = 20 * floor(x / 20);
    j = 20 * floor(y / 20);
    return this.dots[[i, j]];
  };

  Grid.prototype.draw = function() {
    var _, d, ref, results;
    ref = this.dots;
    results = [];
    for (_ in ref) {
      d = ref[_];
      results.push(d.draw(200, 200, 200));
    }
    return results;
  };

  Grid.prototype.selected = function() {
    var _, d, l, ref;
    l = [];
    ref = this.dots;
    for (_ in ref) {
      d = ref[_];
      if (d.selected) {
        l.push(d);
      }
    }
    return l;
  };

  return Grid;

})();
