// Generated by CoffeeScript 1.10.0
var average, draw, keyTyped, setup;

average = function(list) {
  var element, k, len, total;
  total = 0;
  for (k = 0, len = list.length; k < len; k++) {
    element = list[k];
    console.log(element);
    if (element === void 0) {
      continue;
    }
    total = total + element;
  }
  return total / list.length;
};

keyTyped = function() {
  if (key === 'p') {
    return noLoop();
  }
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  this.precision = 3;
  this.line = [];
  this.lines = [this.line];
  this.i = 0;
  return 0;
};

draw = function() {
  var current, direction, element, index, j, k, l, last, len, len1, m, n, nlines, o, p, results, s;
  background(51);
  stroke(200);
  strokeWeight(1);
  noFill();
  k = lines.length - 2, last = lines[k++], current = lines[k++];
  if (last === void 0) {
    for (j = m = 1; m <= 10; j = ++m) {
      current.push(map(noise(i / 30), 0, 1, -20, 20));
      i++;
    }
  } else {
    for (j = n = 1; n <= 100; j = ++n) {
      s = max(0, i - 1);
      direction = average(last.slice(s, +(i + 1) + 1 || 9e9));
      current.push(direction + random(0, 1));
      i++;
    }
  }
  if (current.length > height) {
    lines.push([]);
    this.i = 0;
  }
  results = [];
  for (nlines = o = 0, len = lines.length; o < len; nlines = ++o) {
    l = lines[nlines];
    beginShape();
    for (index = p = 0, len1 = l.length; p < len1; index = ++p) {
      element = l[index];
      vertex(element + 4 * (nlines + 10), precision * index);
    }
    results.push(endShape());
  }
  return results;
};
